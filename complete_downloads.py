import csv
import os
from datetime import datetime
import sys

def sanitize_filename(filename):
    """–£–¥–∞–ª—è–µ—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞"""
    import re
    return re.sub(r'[<>:"/\\|?*]', '_', filename)

def get_first_5_words(text):
    """–ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Å–ª–æ–≤ –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
    words = text.split()[:5]
    return '_'.join(words)

def download_pending_videos():
    """–°–∫–∞—á–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ, –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ –∫–∞–∫ completed, –Ω–æ –±–µ–∑ –ø—É—Ç–µ–π –∫ —Ñ–∞–π–ª–∞–º"""
    base_path = 'downloaded_videos'
    table_file = os.path.join(base_path, 'prompts_table.csv')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª —Ç–∞–±–ª–∏—Ü—ã
    if not os.path.exists(table_file):
        print(f"–û—à–∏–±–∫–∞: —Ñ–∞–π–ª —Ç–∞–±–ª–∏—Ü—ã {table_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏–π, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if not os.path.exists(base_path):
        os.makedirs(base_path)
    
    # –ß–∏—Ç–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
    with open(table_file, 'r', encoding='utf-8') as f:
        reader = csv.DictReader(f)
        rows = list(reader)
    
    # –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫–∏ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "completed", –Ω–æ –±–µ–∑ –ø—É—Ç–∏ –∫ –≤–∏–¥–µ–æ
    pending_downloads = []
    for row in rows:
        if row['status'] == 'completed' and not row['video_path']:
            pending_downloads.append(row)
    
    if not pending_downloads:
        print("–ù–µ—Ç –æ–∂–∏–¥–∞—é—â–∏—Ö –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ")
        return
    
    print(f"–ù–∞–π–¥–µ–Ω–æ {len(pending_downloads)} –≤–∏–¥–µ–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏:")
    
    # –í—ã–≤–æ–¥–∏–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –≤–∏–¥–µ–æ
    for i, row in enumerate(pending_downloads, 1):
        prompt_text = row['prompt'][:40] + '...' if len(row['prompt']) > 40 else row['prompt']
        print(f"{i}. ID: {row['id']} - '{prompt_text}'")
    
    print("\n–≠—Ç–∏ –≤–∏–¥–µ–æ –æ—Ç–º–µ—á–µ–Ω—ã –∫–∞–∫ 'completed', –Ω–æ –Ω–µ –∏–º–µ—é—Ç –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É.")
    print("–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.")
    print("\n–ß—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:")
    print("1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–∏ –ø—Ä–æ–º–ø—Ç—ã –±–æ—Ç—É –≤—Ä—É—á–Ω—É—é –∏—Å–ø–æ–ª—å–∑—É—è Telegram")
    print("2. –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∏–¥–µ–æ –æ—Ç –±–æ—Ç–∞, —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏—Ö –≤ –ø–∞–ø–∫—É 'downloaded_videos'")
    print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º --update, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–∫—Ä–∏–ø—Ç —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º --update
    if len(sys.argv) > 1 and sys.argv[1] == '--update':
        update_table(pending_downloads, rows, table_file)

def update_table(pending_downloads, all_rows, table_file):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É, –¥–æ–±–∞–≤–ª—è—è –ø—É—Ç–∏ –∫ —Å–∫–∞—á–∞–Ω–Ω—ã–º –≤–∏–¥–µ–æ"""
    base_path = 'downloaded_videos'
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    video_files = [f for f in os.listdir(base_path) if f.endswith('.mp4')]
    
    if not video_files:
        print("–í –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ downloaded_videos –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤")
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–∂–∏–¥–∞—é—â–µ–≥–æ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ
    updated_count = 0
    
    for row in pending_downloads:
        prompt_id = row['id']
        model = row.get('model', 'üåô SORA')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º SORA –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –º–æ–¥–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω–∞
        
        # –ò—â–µ–º —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –¥–∞–Ω–Ω–æ–º—É –ø—Ä–æ–º–ø—Ç—É
        matching_files = [f for f in video_files if prompt_id in f]
        
        if matching_files:
            # –ï—Å–ª–∏ –Ω–∞—à–ª–∏, –æ–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç—å
            filepath = os.path.join(base_path, matching_files[0])
            for table_row in all_rows:
                if table_row['id'] == prompt_id:
                    table_row['video_path'] = filepath
                    updated_count += 1
                    break
        else:
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, —Å–æ–∑–¥–∞–µ–º –∏–º—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–º–ø—Ç–∞ –∏ –º–æ–¥–µ–ª–∏
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            
            # –û—á–∏—â–∞–µ–º —Å—Ç—Ä–æ–∫—É –º–æ–¥–µ–ª–∏ –æ—Ç —ç–º–æ–¥–∑–∏ –∏ –ø–æ–ª—É—á–∞–µ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –∏–º—è
            model_short = model.split()[0].replace('üåô', '').replace('‚ûï', '').replace('üì¶', '')\
                        .replace('üé¨', '').replace('üéØ', '').replace('üëÅ', '')\
                        .replace('üå´', '').replace('ü¶ã', '').strip()
            
            # –°–æ–∑–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
            prompt_words = get_first_5_words(row['prompt'])
            prompt_words = sanitize_filename(prompt_words)
            filename = f"{timestamp}_{prompt_id}_{model_short}_{prompt_words}.mp4"
            
            print(f"–î–ª—è –ø—Ä–æ–º–ø—Ç–∞ {prompt_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ")
            print(f"–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º–æ–µ –∏–º—è —Ñ–∞–π–ª–∞: {filename}")
            
            # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Ñ–∞–π–ª–∞
            print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∏–¥–µ–æ —Ñ–∞–π–ª—ã:")
            for i, file in enumerate(video_files, 1):
                print(f"{i}. {file}")
            
            choice = input(f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∞–π–ª–∞ –¥–ª—è –ø—Ä–æ–º–ø—Ç–∞ {prompt_id} (–∏–ª–∏ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): ")
            
            if choice.strip() and choice.isdigit() and 1 <= int(choice) <= len(video_files):
                selected_file = video_files[int(choice) - 1]
                filepath = os.path.join(base_path, selected_file)
                
                for table_row in all_rows:
                    if table_row['id'] == prompt_id:
                        table_row['video_path'] = filepath
                        updated_count += 1
                        break
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
    if updated_count > 0:
        with open(table_file, 'w', newline='', encoding='utf-8') as f:
            writer = csv.DictWriter(f, fieldnames=all_rows[0].keys())
            writer.writeheader()
            writer.writerows(all_rows)
        
        print(f"–û–±–Ω–æ–≤–ª–µ–Ω—ã –ø—É—Ç–∏ –∫ {updated_count} –≤–∏–¥–µ–æ —Ñ–∞–π–ª–∞–º")
    else:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –Ω–∏ –æ–¥–Ω—É –∑–∞–ø–∏—Å—å")

if __name__ == "__main__":
    download_pending_videos() 